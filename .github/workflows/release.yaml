name: Release

on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64, 386]
        exclude:
          - goos: darwin
            goarch: 386

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.3

      - name: Install dependencies
        run: go mod tidy

      - name: Verify build
        run: go build ./cmd/kollect

      - name: Build binary
        run: |
          mkdir -p build-artifacts-${{ github.run_id }}
          cd cmd/kollect
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ../../build-artifacts-${{ github.run_id }}/kollect-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: List build artifacts
        run: ls -la build-artifacts-${{ github.run_id }}

      - name: Debug paths
        if: matrix.goos == 'linux' && matrix.goarch == 'amd64'
        run: |
          echo "Root directory contents:"
          ls -la $GITHUB_WORKSPACE
          echo "Kollect directory contents:"
          ls -la $GITHUB_WORKSPACE/cmd/kollect
          echo "Web directory contents:"
          ls -la $GITHUB_WORKSPACE/cmd/kollect/web || true

      - name: Copy additional files
        run: |
          if [ "${matrix.goos}" == "linux" ] && [ "${matrix.goarch}" == "amd64" ]; then
            cp $GITHUB_WORKSPACE/LICENSE $GITHUB_WORKSPACE/README.md $GITHUB_WORKSPACE/build-artifacts-${{ github.run_id }}/
          fi

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: build-artifacts-${{ github.run_id }}/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}